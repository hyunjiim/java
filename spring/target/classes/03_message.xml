<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	<!-- Spring 컨테이너는 환경설정파일(Spring Bean Configuration File - XML)로 부터 클래스를
	제공받아 객체를 생성하여 관리 - Spring Bean : Spring 컨테이너에 의해 관리되는 객체(클래스) -->
	<!-- => Spring 컨테이너는 리플렉션(Reflection) 기술을 사용하여 객체 생성 -->
	<!-- 리플렉션 기술은 전에 배운 mvc >> ControllerServlet.java 파일에서 확인 가능 -->
	<!-- 리플렉션 : 작성 시점에서 어떠한 클래스를 사용해야할지 모르지만 런타임 시점에서 가져와 실행해야 하는
	경우 사용하는 기술로, 구체적인 클래스 타입을 알지 못하더라도 그 클래스의 메소드, 타입, 변수들에 접근할 수
	있도록 해주는 Java API -->
	<!-- bean 엘리먼트를 사용하여 Spring 컨테이너에게 Spring Bean으로 사용될 클래스 제공 -->
	<bean class="xyz.itwill03.spring.HelloMessageObject" id="helloMessageObject"/>
	<bean class="xyz.itwill03.spring.HiMessageObject" id="hiMessageObject"/>
	
	<!-- bean 엘리먼트의 하위 엘리먼트를 사용하여 Spring Bean에 대한 포함관계 설정 - 의존성 주입 -->
	<bean class="xyz.itwill03.spring.MessagePrint" id="messagePrint">
		<!-- <property name="object" ref="helloMessageObject"/> -->
		<property name="object" ref="hiMessageObject"/>
	</bean>

</beans>
