<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- Controller를 Spring Bean으로 등록 -->
	<bean class="xyz.itwill05.di.LoginController" id="loginController"/>
	<bean class="xyz.itwill05.di.LogoutController" id="logoutController"/>
	<bean class="xyz.itwill05.di.ListController" id="listController"/>

	<!-- Setter Injection을 사용하여 객체 필드에 Collection 객체에 저장하여 의존관계 구현 - DI -->
	<bean class="xyz.itwill05.di.CollectionBean" id="collectionBean">
		<property name="nameSet">
			<!-- set : Set 객체를 생성하여 필드에 저장하기 위한 엘리먼트 -->
			<!-- 객체가 만들어지는 것만으로 끝나면 안됨 - 요소값(String) 저장 -->
			<set>
				<!-- value : Collection 객체에 값을 전달하여 요소로 추가하는 엘리먼트 -->
				<!-- Set 객체에는 동일한 값이 저장되지 않음 -->
				<value>홍길동</value>
				<value>임꺽정</value>
				<value>전우치</value>
				<value>홍길동</value>
			</set>
		</property>
		
		<property name="nameList">
			<!-- list : List 객체를 생성하여 필드에 저장하기 위한 엘리먼트 -->
			<list>
				<!-- value : Collection 객체에 값을 전달하여 요소로 추가하는 엘리먼트 -->
				<!-- List 객체에는 순서가 있기 때문에 동일한 값이 저장될 수 있음 -->
				<value>홍길동</value>
				<value>임꺽정</value>
				<value>전우치</value>
				<value>홍길동</value>
			</list>
		</property>
		
		<property name="controllerSet">
			<set>
				<!-- ref : 콜렉션 객체에 Spring Bean을 전달하여 요소로 추가하는 엘리먼트 -->
				<!-- bean 속성 : 요소로 추가될 Spring Bean의 식별자(beanName)를 속성값으로 설정 -->
				<ref bean="loginController"/>
				<ref bean="logoutController"/>
				<ref bean="listController"/>
			</set>
		</property>
		
		<property name="controllerList">
			<list>
				<ref bean="loginController"/>
				<ref bean="logoutController"/>
				<ref bean="listController"/>
			</list>
		</property>
		
		<property name="controllerMap">
			<!-- map : Collection 객체를 생성하여 필드에 저장하기 위한 엘리먼트 -->
			<map>
				<!-- entry : Map 객체에 엔트리(Entry - Key & Value)를 추가하기 위한 엘리먼트 -->
				<entry>
					<!-- key : 엔트리의 맵키(MapKey)를 설정하기 위한 엘리먼트 -->
					<key>
						<value>login</value> <!-- KEY -->
					</key>
					<!-- ref : 엔트리의 맵값(MapValue - Controller)를 설정하기 위한 엘리먼트 -->
					<ref bean="loginController"/> <!-- VALUE -->
				</entry>
				<entry>
					<key>
						<value>logout</value>
					</key>
					<ref bean="logoutController"/>
				</entry>
				<entry>
					<key>
						<value>list</value>
					</key>
					<ref bean="listController"/>
				</entry>
			</map>
		</property>
		<property name="controllerProperties">
			<!-- Properties는 Map 안의 제네릭이 Key랑 Value 모두 String 자료형인 것과 같음  -->
			<!-- props : Properties 객체(Map 객체)를 생성하여 필드에 저장하기 위한 엘리먼트 -->
			<!-- => 필드의 자료형인 Map<String, String>인 경우 props 엘리먼트로 Map 객체를 생성하여
			객체 필드에 저장 가능 -->
			<!-- => Map<String, String>과 같기 때문에 props 엘리먼트 대신 map 엘리먼트를 사용할 수 있음 -->
			<props>
			<!-- prop : Properties 객체에 엔트리를 추가하는 엘리먼트 -->
			<!-- => prop 엘리먼트의 내용을 엔트리의 맵값으로 사용 -->
			<!-- key 속성: 엔트리의 맵키를 속성값으로 설정 -->
				<prop key="login">xyz.itwill05.di.LoginController</prop>	
				<prop key="logout">xyz.itwill05.di.LogoutController</prop>
				<prop key="list">xyz.itwill05.di.ListController</prop>
			</props>
		</property>
	</bean>

</beans>
